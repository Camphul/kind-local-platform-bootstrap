# just some test manifest to see if the ingress works.
kind: Pod
apiVersion: v1
metadata:
  name: foo-app
  labels:
    app: foo
spec:
  containers:
  - command:
    - /agnhost
    - serve-hostname
    - --http=true
    - --port=8080
    image: registry.k8s.io/e2e-test-images/agnhost:2.39
    name: foo-app
---
kind: Service
apiVersion: v1
metadata:
  name: foo-service
spec:
  selector:
    app: foo
  ports:
  # Default port used by the image
  - port: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-bar-config
  labels:
    app: bar
data:
  nginx.conf: |
    events {}
    http {
      server {
        listen 8081;
      
        location / {
          default_type text/plain;
          return 200 "hello from bar app\n";
        }
      }
    }
---
kind: Pod
apiVersion: v1
metadata:
  name: bar-app
  labels:
    app: bar
spec:
  containers:
    - name: bar-app
      image: nginx:stable
      volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      ports:
        - containerPort: 8081
  volumes:
    - name: nginx-config
      configMap:
        name: nginx-bar-config

---
kind: Service
apiVersion: v1
metadata:
  name: bar-service
  labels:
    app: bar
spec:
  selector:
    app: bar
  ports:
  - port: 8081
    targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
spec:
  rules:
    - host: foo.{{ .Values.domain }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: foo-service
                port:
                  number: 8080
    - host: bar.{{ .Values.domain }}
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: bar-service
                port:
                  number: 8081
